knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("data/breast-cancer.csv")
View(df)
View(df)
na_count_df <- colSums(is.na(df))
na_count_df <- colSums(is.na(df))
print(na_count_df)
summary(df)
install.packages("summarytools")
library(summarytools)
dfSummary(df)
library(summarytools)
dfSummary(df)
dfSummary(df)
glimpse(df)
plot(radius_mean)
plot(df.radius_mean)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("summarytools")
glimpse(df)
install.packages("glimpse")
library("glimpse")
df <- read.csv("data/breast-cancer.csv")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
df <- read.csv("data/breast-cancer.csv")
Y
yes
i
library(tidyverse)
df <- read.csv("data/breast-cancer.csv")
print(df)
na_count_df <- colSums(is.na(df))
print(na_count_df)
summary(df)
glimpse(df)
glimpse(df)
summary(df)
glimpse(df)
summary(df)
glimpse(df)
summary(df)
naniar::gg_miss_upset(df)
install.packages("naniar")
naniar::gg_miss_upset(df)
df <- df %>%
mutate(numeric_diagnosis = ifelse(diagnosis == "M", 1, 0))
print(df)
library(dplyr)
df <- df %>%
mutate(numeric_diagnosis = ifelse(diagnosis == "M", 1, 0))
print(df)
library(dplyr)
df <- df %>%
mutate(numeric_diagnosis = ifelse(diagnosis == "M", 1, 0))
select(numeric_diagnosis)
library(dplyr)
df <- df %>%
mutate(numeric_diagnosis = ifelse(diagnosis == "M", 1, 0))
print(df)
library(dplyr)
df <- df %>%
mutate(n_diagnosis = ifelse(diagnosis == "M", 1, 0))
select(-diagnosis) %>%
print(df)
library(dplyr)
df <- df %>%
mutate(n_diagnosis = ifelse(diagnosis == "M", 1, 0))
print(df)
df <- df %>%
mutate(n_diagnosis = ifelse(diagnosis == "M", 1, 0))
print(df)
df <- df %>% select(-diagnosis, -numeric_diagnosis)
print(df)
# Check for non-double elements in the 'value' column
non_double_elements <- df[!sapply(df$radius_mean, is.numeric), ]
# View the non-double elements
print(non_double_elements)
# Check for non-double elements in the 'value' column
non_double_elements <- df[!sapply(df$n_diagnosis, is.numeric), ]
# View the non-double elements
print(non_double_elements)
print(colnames(df))
# Check for non-double elements in the 'value' column
non_double_elements <- df[!sapply(df$symmetry_worst, is.numeric), ]
# View the non-double elements
print(non_double_elements)
result <- df %>%
group_by(group) %>%
summarise(across(where(is.numeric),
list(mean = ~ mean(.x, na.rm = TRUE),
median = ~ median(.x, na.rm = TRUE),
min = ~ min(.x, na.rm = TRUE),
max = ~ max(.x, na.rm = TRUE))))
result <- df %>%
group_by(n_diagnosis) %>%
summarise(across(where(is.numeric),
list(mean = ~ mean(.x, na.rm = TRUE),
median = ~ median(.x, na.rm = TRUE),
min = ~ min(.x, na.rm = TRUE),
max = ~ max(.x, na.rm = TRUE))))
# View the result
print(result)
ggplot(df, aes(x = n_diagnosis)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
labs(title = "Histogram of disgnosis",
x = "diagnosis",
y = "Frequency") +
theme_minimal()
ggplot(df, aes(x = n_diagnosis)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
labs(title = "Histogram of disgnosis",
x = "diagnosis",
y = "Frequency") +
theme_minimal()
ggplot(df, aes(x = n_diagnosis)) +
geom_histogram(binwidth = 5, color = "black") +
labs(title = "Histogram of disgnosis",
x = "diagnosis",
y = "Frequency") +
theme_minimal()
ggplot(df, aes(x = n_diagnosis)) +
geom_histogram(binwidth = 5, fill = "lightblue", color = "black") +
labs(title = "Histogram of disgnosis",
x = "diagnosis",
y = "Frequency") +
theme_minimal()
summarise(df,  "Минимум"=min(symmetry_worst), "Медиана"=median(symmetry_worst), "Среднее"=mean(symmetry_worst), "Максимум"=max(symmetry_worst))
plot(pressure)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
df <- read.csv("data/diabetes.csv")
print(df)
na_count_df <- colSums(is.na(df))
print(na_count_df)
glimpse(df)
summary(df)
result <- df %>%
group_by(Outcome) %>%
summarise(across(where(is.numeric),
list(mean = ~ mean(.x, na.rm = TRUE),
median = ~ median(.x, na.rm = TRUE),
min = ~ min(.x, na.rm = TRUE),
max = ~ max(.x, na.rm = TRUE))))
# View the result
print(result)
library(ggplot2)
df_long <- tidyr::gather(df, Outcome, Insulin, Age)
ggplot(school_earnings_long, aes(x = Outcome, y = Insulin, fill = Age)) +
geom_boxplot() +
labs(title = "Значение зарплаты в зависимости от пола", x = "Пол", y = "Зарплата")
library(ggplot2)
df_long <- tidyr::gather(df, Outcome, Insulin, Age)
ggplot(df_long, aes(x = Outcome, y = Insulin, fill = Age)) +
geom_boxplot() +
labs(title = "Значение зарплаты в зависимости от пола", x = "Пол", y = "Зарплата")
library(ggplot2)
ggplot(df, aes(x = factor(Outcome), y = Glucose, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Glucose Levels by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Glucose Level") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
# Create a histogram of BMI
ggplot(df, aes(x = BMI)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Frequency") +
theme_minimal()
# Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose, color = Gender)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "Body Mass Index (BMI)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "Body Mass Index (BMI)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "Body Mass Index (BMI)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "Body Mass Index (BMI)\n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "\nBody Mass Index (BMI)\n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
install.packages("GGally")
library(GGally)
# Pair plot of selected numeric variables
ggpairs(df[, c("Glucose", "BMI", "Age", "Insulin")])
library(ggplot2)
ggplot(df, aes(x = factor(Outcome), y = Insulin, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Insulin Levels by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Insulin Level") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
library(ggplot2)
ggplot(df, aes(x = factor(Outcome), y = Age, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Age by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Age") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
ggpairs(df[, c("Glucose", "BMI", "Age", "Insulin")])
ggpairs(df[, c("Glucose", "BMI", "Insulin")])
# Create a histogram of BMI
ggplot(df, aes(x = BMI)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Frequency") +
theme_minimal()
ggplot(df, aes(x = BloodPressure)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BloodPressure",
x = "BloodPressure",
y = "Frequency") +
theme_minimal()
ggpairs(df[, c("BloodPressure", "DiabetesPedigreeFunction", "Pregnacies")])
ggpairs(df[, c("BloodPressure", "DiabetesPedigreeFunction", "Pregnacies")])
ggpairs(df[, c("BloodPressure", "DiabetesPedigreeFunction", "Pregnancies")])
# Create a histogram of BMI
ggplot(df, aes(x = Outcome)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Frequency") +
theme_minimal()
# Create a histogram of BMI
ggplot(df, aes(x = BMI)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Frequency") +
theme_minimal()
# Scatter plot of Insulin vs. Glucose
ggplot(df, aes(x = Insulin, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of Insulin  vs. Glucose",
x = "\nBody Mass Index (Insulin )\n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of Insulin vs. Glucose
ggplot(df, aes(x = Insulin, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of Insulin  vs. Glucose",
x = "\nInsulin \n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
ggpairs(df[, c("Glucose", "BMI", "Insulin", color = Outcome)])
ggpairs(df[, c("Glucose", "BMI", "Insulin"), color = Outcome])
ggpairs(df[, c("Glucose", "BMI", "Insulin")])
ggplot(df, aes(x = factor(Survived))) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue, red", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
library(tidyverse)
library(ggplot2)
df <- read.csv("data/diabetes.csv")
print(df)
na_count_df <- colSums(is.na(df))
print(na_count_df)
glimpse(df)
summary(df)
result <- df %>%
group_by(Outcome) %>%
summarise(across(where(is.numeric),
list(mean = ~ mean(.x, na.rm = TRUE),
median = ~ median(.x, na.rm = TRUE),
min = ~ min(.x, na.rm = TRUE),
max = ~ max(.x, na.rm = TRUE))))
# View the result
print(result)
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(Outcome), y = Glucose, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Glucose Levels by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Glucose Level") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
ggplot(df, aes(x = factor(Outcome), y = Age, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Age by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Age") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
ggplot(df, aes(x = BMI)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Frequency") +
theme_minimal()
#Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "\nBody Mass Index (BMI)\n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of Insulin vs. Glucose
ggplot(df, aes(x = Insulin, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of Insulin  vs. Glucose",
x = "\nInsulin \n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
ggpairs(df[, c("Glucose", "BMI", "Insulin")])
ggpairs(df[, c("BloodPressure", "DiabetesPedigreeFunction", "Pregnancies")])
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
df <- read.csv("data/diabetes.csv")
print(df)
na_count_df <- colSums(is.na(df))
print(na_count_df)
glimpse(df)
summary(df)
result <- df %>%
group_by(Outcome) %>%
summarise(across(where(is.numeric),
list(mean = ~ mean(.x, na.rm = TRUE),
median = ~ median(.x, na.rm = TRUE),
min = ~ min(.x, na.rm = TRUE),
max = ~ max(.x, na.rm = TRUE))))
print(result)
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(Outcome), y = Glucose, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Glucose Levels by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Glucose Level") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
ggplot(df, aes(x = factor(Outcome), y = Age, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Age by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Age") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
ggplot(df, aes(x = BMI)) +
geom_histogram(binwidth = 1, fill = "lightblue", color = "black") +
labs(title = "Histogram of BMI",
x = "Body Mass Index (BMI)",
y = "Frequency") +
theme_minimal()
#Scatter plot of BMI vs. Glucose
ggplot(df, aes(x = BMI, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of BMI vs. Glucose",
x = "\nBody Mass Index (BMI)\n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
# Scatter plot of Insulin vs. Glucose
ggplot(df, aes(x = Insulin, y = Glucose, color = Outcome)) +
geom_point() +
labs(title = "Scatter Plot of Insulin  vs. Glucose",
x = "\nInsulin \n\nOutcome: (1= have diabete, 0= doesn't have diabete)",
y = "Glucose Level") +
theme_minimal()
ggpairs(df[, c("Glucose", "BMI", "Insulin")])
ggpairs(df[, c("BloodPressure", "DiabetesPedigreeFunction", "Pregnancies")])
ggplot(df, aes(x = factor(Outcome), y = Glucose, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Glucose Levels by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Glucose Level") +
scale_fill_manual(values = c("lightblue", "lightred")) +
theme_minimal()
ggplot(df, aes(x = factor(Outcome), y = Glucose, fill = factor(Outcome))) +
geom_boxplot() +
labs(title = "Boxplot of Glucose Levels by Diabetes Outcome",
x = "Diabetes Outcome (0 = Non-Diabetic, 1 = Diabetic)",
y = "Glucose Level") +
scale_fill_manual(values = c("lightblue", "lightcoral")) +
theme_minimal()
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue", "lightcoral", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(Outcome))) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Count of people having Diabete",
x = "Outcome (0 = No, 1 = Yes)",
y = "Count") +
theme_minimal()
knit_with_parameters("D:/University/Sem2/Data Science Tools and Project Lifecycle/Data-Science-Tools-and-Project-Lifecycle/HW1/homework1.Rmd")
tinytex::install_tinytex()
